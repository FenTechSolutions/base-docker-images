version: 2.1
jobs:
  build:
    parameters:
      IMAGE:
        type: string
      DOCKERFILE:
        type: string
      BASEIMAGE:
        type: string
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            apk add --update coreutils
      - run:
          name: Define run environment variables
          command: |
            echo 'export PREV=$(date +%Y-%m-15)'>> $BASH_ENV
            echo 'export VERSION=$(date -d "$D" "+%y").$(date --date=$PREV-1month "+%m")'>> $BASH_ENV
            echo 'export NV_VERSION=$VERSION-py3'>> $BASH_ENV
            source $BASH_ENV
            echo "Defined VARS: PREV:$PREV  VERSION:$VERSION  NV_VERSION:$NV_VERSION"
      # - restore_cache:
      #     keys:
      #       - v1-{{ .Branch }}
      #     paths:
      #       - /caches/app.tar
      # - run:
      #     name: Load Docker image layer cache
      #     command: |
      #       set +o pipefail
      #       docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            echo "BASH_ENV: $BASH_ENV"
            source $BASH_ENV
            echo "Defined VARS: PREV:$PREV  VERSION:$VERSION  NV_VERSION:$NV_VERSION"
            docker --log-level "error" build -q --build-arg BASEIMAGE=<< parameters.BASEIMAGE >> --build-arg VERSION="$NV_VERSION" --build-arg GITHUB_PAT="$GITHUB_PAT" -f << parameters.DOCKERFILE >> -t "<< parameters.IMAGE >>:${VERSION}" .
      # - run:
      #     name: Save Docker image layer cache
      #     command: |
      #       mkdir -p /caches
      #       docker save -o /caches/app.tar cdt-env
      # - save_cache:
      #     key: v1-{{ .Branch }}-{{ epoch }}
      #     paths:
      #       - /caches/app.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
              docker push "fentechai/<< parameters.IMAGE >>:$VERSION"
              docker tag "fentechai/<< parameters.IMAGE >>:latest"
              docker push "fentechai/<< parameters.IMAGE >>:latest"
            fi


workflows:
  build-docker-images:
    jobs:
      - build:
          IMAGE: fentechai/cdt-env-base
          DOCKERFILE: cdt-env.dockerfile
          BASEIMAGE: circleci/python
      - build:
          IMAGE: fentechai/nv-cdt-base
          DOCKERFILE: nv-cdt-env.dockerfile
          BASEIMAGE: nvcr.io/nvidia/pytorch
